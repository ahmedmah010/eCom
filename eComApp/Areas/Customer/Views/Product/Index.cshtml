@model CustomerProductsVM

@section Products 
{
    <div class="Layout">
        <div class="Control">
            <div class="SortBy">
                <span>SORT BY</span>
                <select onchange="ChangeSortBy(this.value)" asp-for="@Model.ProductFilterVM.SortBy">
                    <option selected value="0">Default</option>
                    <option value="asc">Price Ascending</option>
                    <option value="desc">Price Descending</option>
                </select>
            </div>
            <div class="SearchBar">
                <input onkeyup="SearchForProducts(this.value)" type="text" placeholder="What are you looking for?" />
                <div id="SearchedProducts">

                </div>
            </div>
            <div class="Pagination">
                <span>DISPLAY</span>
                <select onchange="ChangePerPage(this.value)" asp-for="@Model.ProductFilterVM.Display">
                    <option selected value="3">3 PER PAGE</option>
                    <option value="2">2 PER PAGE</option>
                    <option value="1">1 PER PAGE</option>
                </select>
            </div>
        </div>
        <hr />
       

        <div class="Products-Layout">
            <form id="FilterForm" asp-area="Customer" asp-controller="Product" asp-action="Index" method="GET">
                <div class="Filters">
                    <h3>Filters</h3>
                    <div class="Brand">
                        <p>Brand</p>
                        @foreach(var Brand in Model.ProductFilterVM.BrandsCheckBox)
                        {
                            <input type="checkbox" name="Brands" value="@Brand.Value" checked="@Brand.IsChecked" onchange="this.form.submit()" />
                            <label>@Brand.Value</label> <br />
                        }
                    </div>
                    <hr />
                    <div class="Category">
                        <p>Categories</p>
                        <div>
                            <input type="button" onclick="ChooseCat(this.value)" class="btn btn-primary" value="All" />
                            @foreach(var Category in Model.Categories)
                            {
                                <input type="button" onclick="ChooseCat(this.value)" class="btn btn-primary" value="@Category.Name"/>
                            }
                            <input type="text" id="ChosenCategory" onchange="this.form.submit()" name="Category" value="@Model.ProductFilterVM.Category" hidden />
                            <input type="text" id="ChosenPage" onchange="this.form.submit()" name="PageNumber" value="" hidden />
                            <input type="text" id="ChosenSortBy" onchange="this.form.submit()" name="SortBy" value="@Model.ProductFilterVM.SortBy" hidden />
                            <input type="text" id="ChosenPerPage" onchange="this.form.submit()" name="Display" value="@Model.ProductFilterVM.Display" hidden />
                            
                        </div>
                    </div>
                    <hr />
                    <div class="Price">
                        <p>Price</p>
                        <span>From</span>
                        <input type="number" name="PriceFrom" value="@Model.ProductFilterVM.PriceFrom"/>
                        <span>To</span>
                        <input type="number" name="PriceTo" value="@Model.ProductFilterVM.PriceTo" />
                        <input class="btn btn-outline-dark mt-2" type="button" value="Apply" onclick="this.form.submit()"/>
                    </div>

                </div>
            </form>
            
            <div class="Products" id="Products">
                <partial name="~/Views/Shared/Customer_ProductPV/_ProductPV.cshtml" model="@Model.Products"/>
            </div>
        </div>
        <div class="PaginationButtons">

            <input type="button" class="btn btn-primary" onclick="ChoosePage(this.value)" value="1">

                @for(int i = 2;i<=Model.PaginationButtons;++i)
                {
                <input type="button" class="btn btn-primary" onclick="ChoosePage(this.value)" value="@i">
                }
        
        </div>
      

    </div>

}

@section Scripts {
    <script type="text/javascript">
        //function Paginate(PageNumber)
        //{
        //    var pg = PageNumber;
        //    var _url = '@Url.Action("PaginatePV","Product")';
        //    $.ajax({
        //        url: _url,
        //        data: {"PageNumber":pg},
        //        success: function(res)
        //        {
        //            $("#Products").html(res);
        //            window.history.pushState(`Product?PageNumber=${pg}`, "title", `Product?PageNumber=${pg}`)
        //        }
        //    });
            
        //}
        //$(window).on("popstate", function (e) { //Allows back and foward browsers buttons to work properly
        //   location.reload();
        //});
        function ChooseCat(Category)
        {
            $('#ChosenCategory').val(Category).trigger('change');
        }
        function ChoosePage(pg) {
            $('#ChosenPage').val(pg).trigger('change');
        }
        function ChangeSortBy(value)
        {
            $('#ChosenSortBy').val(value).trigger('change');
        }
        function ChangePerPage(value) {
            $('#ChosenPerPage').val(value).trigger('change');
        }


        function SearchForProducts(value){
            var _url = '@Url.Action("ProductSearchPV","Product")';
            var _val = value;
            $.ajax({
                url: _url,
                data: {text: _val},
                success: function(res)
                {
                    if (_val.length >= 3 && res != "") {  
                        $('#SearchedProducts').show();
                        $('#SearchedProducts').html(res);
                    }
                    else
                    {
                        $('#SearchedProducts').hide();
                    }
                }
       
            });
        }

        $(document).click(function (e) {
            var container = $('#SearchedProducts');
            // if the target of the click isn't the container nor a descendant of the container
            if (!container.is(e.target) && container.has(e.target).length === 0) {
                container.hide();
            }
        })
        

     
    </script>
}